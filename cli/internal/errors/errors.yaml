errors:
  # INIT_ERRORS
  # –––––––––––
  - type: InitFailed
    name: "Init Failed"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      This happened because: {{ .Cause }}

  - type: ServiceNotAvailable
    name: "Service not available"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

  - type: InvalidConnectionToken
    name: "Invalid Connection Token"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Your current connection token has probably expired.

      Try to login again:
        $ ks login

  - type: NotAKeystoneProject
    name: "Not A Keystone Project"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      It seems you are not in a keystone project.

      Neither the current directory ({{ .Path }}), nor any of its parent,
      have a keystone.yaml file.
      If this is a new project, start with:
        $ ks init <your-project-name>

  - type: NoWorkingDirectory
    name: "No Working Directory"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      A current working directory could not be determined.

      This happened because: {{ .Cause }}

  - type: UnsupportedFlag
    name: "Unsupported Flag"
    params:
      - name: Flag
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Flag | red }} {{- "'" | red }}

  - type: AlreadyKeystoneProject
    name: "Already a Keystone project"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You are trying to create a Keystone project but there already are keystone files in your current directory.
      Please remove the .keystone directory and keystone.yaml file beforehand.

  - type: DeviceNotRegistered
    name: "Device not registered"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      This device is not registered to your account or its access has been revoked.
      To register it, please logout, then login again.

  - type: BadDeviceName
    name: "Bad Device Name"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Device names must be alphanumeric with ., -, _

  # KEYSTONE_YAML_ERRORS
  # ––––––––––––––––––––
  - type: FailedToReadKeystoneFile
    name: "Failed To Read Keystone File"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      The keystone.yaml file exists, but it might not be readable or writable.
      Its content may also be corrupted and may not be parsable.

      This happened because: {{ .Cause }}

  - type: FailedToUpdateKeystoneFile
    name: "Failed To Update Keystone File"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      The keystone.yaml file exists, but it might not be readable or writable.
      Its content may also be corrupted and may not be parsable.

      This happened because: {{ .Cause }}

  # DOT_ENV_ERRORS
  # ––––––––––––––
  - type: FailedToUpdateDotEnv
    name: "Failed To Update .env"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: FailedToReadDotEnv
    name: "Failed To Read .env"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  # PROJECT_ERRORS
  # –––––––––––––––––
  - type: ProjectDoesntExist
    name: "Project Does Not Exist"
    params:
      - name: ProjectName
        type: string
      - name: ProjectId
        type: string
    template: |-
      {{ ERROR }} {{ "Project" | red }} {{ .ProjectName | red }} {{ "Does Not Exist" | red }}
      Project in your keystone.yaml does not exist or your are not part of it.

      If you have this configuration from a project member, ask them to add you in the keystone project.

  - type: OrganizationNotPaid
    name: "Organization Not Paid"
    params: []
    template: |-
      {{ ERROR }} {{- .Name | red }} 
      It seems like some members of the project's organization are not admin.
      Roles feature is only available for paid organization.
      
      Change each member role to admin:
        $ ks member set-role <member id>

      Or, upgrade your organization plan:
        $ ks orga upgrade

  - type: NameDoesNotMatch
    name: "Name Does Not Match"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

  - type: CouldNotRemoveLocalFiles
    name: "Could Not Remove Local Files"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      The project has been destroyed on our servers,
      but some locale files could not be removed.

      Check file system permissions and remove the following files manually:
        - keystone.yaml
        - .keystone/

      This happened because: {{ .Cause }}

  # ENVIRONMENT_ERRORS
  # –––––––––––––––––
  - type: EnvironmentDoesntExist
    name: "Environment Does Not Exist"
    params:
      - name: Environment
        type: string
      - name: Available
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Environment | red }} {{- "'" | red }}
      Available environments are: {{ .Available }}

      To use another environment:
        $ ks env switch {{ .Environment }}

  - type: FailedToSetCurrentEnvironment
    name: "Failed To Set Current Environment"
    params:
      - name: Environment
        type: string
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Environment | red }} {{- "'" | red }}
      The file at '{{ .Path }}' could not be written.

      This happened because: {{ .Cause }}

  - type: CannotReadEnvironment
    name: "Cannot Read Environment"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: PermissionDenied
    name: "Permission Denied"
    params:
      - name: Environment
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} 
      You do not have the rights to change the '{{ .Environment }}' environment.

  - type: CannotGetEnvironmentKeys
    name: "Cannot Get Environment Puplic Keys"
    params:
      - name: Environment
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Public keys for the '{{ .Environment }}' could not be retrieved.

      This happened because: {{ .Cause }}

  - type: YouHaveLocallyModifiedFiles
    name: "You Have Locally Modified Files"
    params:
      - name: Environment
        type: string
      - name: Files
        type: "[]string"
    template: |-
      {{ ERROR }} {{ .Name | red }}
      {{ range $file := .Files }}  - {{ $file }}
      {{ end }}

      If you want to make those changes permanent for the '{{ .Environment }}'
      and send them all members:
        $ ks file set <filepath>

      If you want to discard those changes:
        $ ks file reset [filepath]...

  # SECRETS_ERRORS
  # ––––––––––––––
  - type: SecretDoesNotExist
    name: "Secret Doesn't Exist"
    params:
      - name: Secret
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Secret | red }} {{- "'" | red }}

      To list secrets:
        $ ks secret

      To add a {{ .Secret }} secret to all environments:
        $ ks secret add {{ .Secret }} <secret-value>

  - type: SecretRequired
    name: "Secret Required"
    params:
      - name: Secret
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Secret | red }} {{- "'" | red }}
      You are trying to either unset '{{ .Secret }}', or to set it to a blank value,
      but is required.

      If you are sure this secret can be unset or blank, you can mark as optionl with:
        $ ks secret optional {{ .Secret }}

  - type: SecretHasChanged
    name: "Secret has changed"
    params:
      - name: Secret
        type: string
      - name: Values
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Secret | red }} {{- "'" | red }}
      You are trying to set a value for '{{ .Secret }}', but a new value has been set by another member.
      If you want to override their value, try again.

      {{ .Values }}

  - type: RequiredSecretsAreMissing
    name: "Required Secrets Are Missing"
    params:
      - name: MissingSecrets
        type: "[]string"
      - name: EnvironmentName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} 
      You are trying to send the environment '{{ .EnvironmentName }}' to a CI/CD service, but some required secrets are missing their value:
      {{ range $secretName := .MissingSecrets }}
        - {{ $secretName }}
      {{ end }}

      You may set value for those secrets with:
        $ ks --env {{ .EnvironmentName }} secret set <SECRET_NAME> <SECRET_VALUE>

      Or make them optional using:
        $ ks secret optional <SECRET_NAME>

  - type: FileDoesNotExist
    name: "File Doesn't Exist"
    params:
      - name: FileName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .FileName | red }} {{- "'" | red }}

      To list files:
        $ ks file

      To add {{ .FileName }} to all environments:
        $ ks file add {{ .FileName }}

  - type: RequiredFilesAreMissing
    name: "Required Files Are Missing"
    params:
      - name: MissingFiles
        type: "[]string"
      - name: EnvironmentName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You are trying to send the environment '{{ .EnvironmentName }}' to a CI/CD service, but some required files are missing or empty:
      {{ range $filePath := .MissingFiles }}
       - {{ $filePath }}
      {{ end }}

      You may set the content for those files with:
        $ ks file add <FILE_PATH>

      Or make them optional using:
        $ ks file optional <FILE_PATH>

  - type: FileNotInWorkingDirectory
    name: "File Not In Working Directory"
    params:
      - name: FilePath
        type: "string"
      - name: Wd
        type: "string"
    template: |-
      {{ ERROR }} {{ .Name | red }}
      The file you are trying to add ({{ .FilePath }}) does not belong
      to the project's current working directory :
          {{ .Wd }}

      Only files belonging to {{ .Wd }} or its subdirectories can be added.

  - type: EnvironmentsHaveChanged
    name: "Environments have changed"
    params:
      - name: EnvironmentsName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      We couldn't find data for the following environments: '{{ .EnvironmentsName }}',
      but a new value has been set by another member.
      Ask someone to push their environments to make new data available to you.

  - type: FileHasChanged
    name: "File has changed"
    params:
      - name: FilePath
        type: string
      - name: AffectedEnvironments
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{ .FilePath | red }}
      You are trying to update the file '{{ .FilePath }}',
      but another member has changed its content.
      If you want to override their changes, try again.

      Affected environments: {{ .AffectedEnvironments }}

  # KEYSTONED_FILES_ERRORS
  # ––––––––––––––––––––––
  - type: CannotAddFile
    name: "Cannot Add File"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CannotSetFile
    name: "Cannot Set File"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      You tried to set the content of '{{ .Path }}', but it could not be read or found.
      Make sure the file exists, and has been added to the project using:
        $ ks file add {{ .Path }}

      This happened because: {{ .Cause }}

  - type: CannotRemoveFile
    name: "Cannot Remove File"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CannotCopyFile
    name: "Cannot Copy File"
    params:
      - name: Path
        type: string
      - name: CachePath
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      A copy to {{ .CachePath }} could not be created at {{ .Path }}.

      This happened because: {{ .Cause }}

  - type: FileNotInEnvironment
    name: "File Not Found For Environment"
    params:
      - name: Path
        type: string
      - name: Environment
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      No version of '{{ .Path }}' was found for the '{{ .Environment }}' environment.

      To get the latest variables and files for '{{ .Environment }}':
        $ ks file && ks secret

  # FILE_SYSTEM_ERRORS
  # ––––––––––––––––––
  - type: CannotCreateDirectory
    name: "Cannot Create Directory"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CannotRemoveDirectoryContents
    name: "Cannot Remove Directory Contents"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CannotSaveFiles
    name: "Cannot Save Files"
    params:
      - name: FileList
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .FileList | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CannotRemoveDirectory
    name: "Cannot Remove Directory"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": '" | red }} {{- .Path | red }} {{- "'" | red }}
      This happened because: {{ .Cause }}

  - type: CopyFailed
    name: "Copy failed"
    params:
      - name: Source
        type: string
      - name: Destination
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Trying to copy '{{ .Source }}' to '{{ .Destination }}'

      This happened because: {{ .Cause }}

  - type: MustBeLoggedIn
    name: "You must be logged in"
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You must be logged to execute this command.

      Please run:
        $ ks login

  - type: CannotFindProjectID
    name: "Cannot find project ID in config file"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Keystone.yaml may be malformated

  - type: UnkownError
    name: "Unkown Error"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Ouch! We didn't think this could happen.

      Feel free to file an issue at https://github.com/wearedevx/keystone
      Sorry for the inconvenience

      This happened because: {{ .Cause }}

  # MEMBERS_ERRORS
  # ––––––––––––––
  - type: UsersDontExist
    name: "Users Don't Exist"
    params:
      - name: Message
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      {{ .Message }}

      You can invite those users to Keystone using
        $ ks invite <email>

  - type: CannotAddMembers
    name: "Cannot Add Members"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: CannotRemoveMembers
    name: "Cannot Remove Members"
    param: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: MemberHasNoAccessToEnv
    name: "Member has no access to environment"
    param: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happend because: {{ .Cause }}

  # DECRYPTION ERRORS
  # -----------------
  - type: CouldNotDecryptMessages
    name: "Could not decrypt messages"
    params:
      - name: Message
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      {{ .Message }}

      This happened because: {{ .Cause }}

  # ENCRYPTION ERRORS
  # -----------------
  - type: CouldNotEncryptMessages
    name: "Could not encrypt messages"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  # MESSAGES ERRORS
  # ---------------
  - type: CouldNotParseMessage
    name: "Could not parse message"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: PayloadErrors
    name: "Errors occured while preparing the payload"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: InvalidFileContent
    name: "Invalid file content"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      The file '{{ .Path }}' content could not be decoded from a base64 string

      This happened because: {{ .Cause }}

  - type: FailedCheckingChanges
    name: "Failed While Checking for Changes"
    params:
      - name: Path
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Error were encountered for file: '{{ .Path }}'

      This happened because: {{ .Cause }}

  # SUBSCRIPTION ERRORS
  # ---------------
  - type: FeatureRequiresToUpgrade
    name: "This Feature Requires to Upgrade"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      To take full advantage of all the features Keystone has to offer,
      such as roles and logs, you should upgrade your plan, using:
        $ ks orga upgrade

  - type: AlreadySubscribed
    name: "The Organization Has Already Been Upgraded"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You already have access to all of Keystone features!

  - type: CannotUpgrade
    name: "Cannot Upgrade"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Communication with the billing service failed,
      try again later.

  - type: ManagementInaccessible
    name: "Management Inaccessible"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Communication with the billing service failed,
      try again later.

  # ORGANIZATION ERRORS
  # ---------------
  - type: OrganizationDoesNotExist
    name: "Organizaiton Does Not Exist"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      To create a new organization, use:
        $ ks orga add <ORGANIZATION_NAME>
      
      Orgnaization names must be unique

  - type: BadOrganizationName
    name: "Bad Organization Name"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      Organization names must be alphanumeric with ., -, _

  - type: OrganizationNameAlreadyTaken
    name: "Organization Name Already Taken"
    params: []
    templape: |-
      {{ ERROR }} {{ .Name | red }}
      Pick another one.

  - type: MustOwnTheOrganization
    name: "You Must Own the Organization"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You tried to perform an operation that requires ownership
      of the organization.
      
      You should ask the owner of said organization to perform it for you.

  - type: YouDoNotOwnTheOrganization
    name: "You Do Not Own An Organization Named"
    params: 
      - name: OrganizationName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{ .OrganizationName | red }}
      To see organization you own, use:
        $ ks orga

      To create a new organization, use:
        $ ks orga add {{ .OrganizationName }}

  # INVITATION ERRORS
  # ---------------
  - type: CouldntSendInvite
    name: "Couldn't Send Invite"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  # ROLE ERRORS
  # ---------------
  - type: CouldntSetRole
    name: "Couldn't Set Role"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      
      This happened because: {{ .Cause }}

  # BACKUP ERRORS
  # ---------------
  - type: BackupDenied
    name: "Permission Denied"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You are not allowed to create backups.

  - type: RestoreDenied
    name: "Permission Denied"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}
      You are not allowed to restore backups.

  - type: CouldNotCreateArchive
    name: "Could Not Create Archive"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: FailedToReadBackup
    name: "Failed To Read Backup"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: FailedToWriteBackup
    name: "Failed To Write Backup"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  # CI ERRORS
  # ---------------
  - type: CiServiceAlreadyExists
    name: "A CI Service Already Exists"
    params: 
      - name: ServiceName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{- ": " | red }} {{- .ServiceName | red }}
      If you wish to modify it, try:
        $ ks ci edit {{ .ServiceName }}

      If you wish to add a new service, pick another name, then
        $ ks ci add <other-service-name>

  - type: NoSuchService
    name: "No Such Service"
    params:
      - name: "ServiceName"
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{ .ServiceName | red }}

  - type: CouldNotAddService
    name: "Could Not Add Service"
    params:
      - name: ServiceName
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{ .ServiceName | red }}

      This happened because: {{ .Cause }}

  - type: CouldNotCleanService
    name: "Could Not Clean Service"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: CouldNotChangeService
    name: "Could Not Change Service"
    params:
      - name: "ServiceName"
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }} {{ .ServiceName | red }}

      This happened because: {{ .Cause }}

  - type: CouldNotRemoveService
    name: "Could Not Remove Service"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

  - type: MissingCIInformation
    name: "Missing Information for CI Service"
    params: 
      - name: "ServiceName"
        type: string
    template: |-
      {{ ERROR }} {{ .Name | red }}
      To edit the service, try:
        $ ks ci edit {{ .ServiceName }}

  - type: CouldNotSendToCIService 
    name: "Could Not Send to CI Service"
    params: []
    template: |-
      {{ ERROR }} {{ .Name | red }}

      This happened because: {{ .Cause }}

