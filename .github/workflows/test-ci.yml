name: Keystone tests

on:
  push:
    branches:
      - ci-with-test

jobs:
  my-job:
    runs-on: ubuntu-20.04

    # container:
    #   image: cossacklabs/ci-py-go-themis

    steps:

      # - name: Create cache folder
      #   run: |
      #     mkdir -p /home/user/.gocache
      #     chmod -R 777 /home/user/.gocache
      #     mkdir -p /home/user/.gomodcache
      #     chmod -R 777 /home/user/.gomodcache
      #     mkdir -p /home/user/.tmp
      #     chmod -R 777 /home/user/.tmp
      #     mkdir -p /home/user/.home/.config
      #     chmod -R 777 /home/user/.home/.config
      #     sudo mkdir -p /__w/_temp/
      #     sudo chmod -R 777 /__w/_temp/

    # Get values for cache paths to be used in later steps
      - id: go-cache-paths
        run: |
          echo "::set-output name=go-build::$(go env GOCACHE)"
          echo "::set-output name=go-mod::$(go env GOMODCACHE)"

      - uses: actions/checkout@v1
        with:
          # Checkout the head ref instead of the PR branch that github creates.
          ref: ${{ github.head_ref }}

      # Cache go build cache, used to speedup go test
      - name: Go Build Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-build }}
          key: ${{ runner.os }}-go-build-${{ hashFiles('**/go.sum') }}

      # Cache go mod cache, used to speedup builds
      - name: Go Mod Cache
        uses: actions/cache@v2
        with:
          path: ${{ steps.go-cache-paths.outputs.go-mod }}
          key: ${{ runner.os }}-go-mod-${{ hashFiles('**/go.sum') }}

      - name: Cache themis install
        uses: actions/cache@v2
        id: cache-themis
        with:
            path: "~/themis"
            key: themis

      - name: Install themis
        env:
          CACHE_HIT: ${{steps.cache-themis.outputs.cache-hit}}
        run: |
            if [[ "$CACHE_HIT" == 'true' ]]; then
              echo "YEAH THEMIS IN CACHE"
              sudo cp --verbose --force --recursive ~/themis/* /
            else
              echo "install themis"
              wget -qO - https://pkgs-ce.cossacklabs.com/gpg | sudo apt-key add -
              sudo apt install apt-transport-https
              sudo sh -c 'echo "deb https://pkgs-ce.cossacklabs.com/stable/ubuntu focal main" >  /etc/apt/sources.list.d/themis.list'
              sudo apt update
              sudo apt install libthemis-dev
              mkdir -p ~/themis
              sudo dpkg -L themis | while IFS= read -r f; do if test -f $f; then echo $f; fi; done | xargs cp --parents --target-directory ~/themis/
            fi

      # - name : "Install themis"
      #   run: |
      #     wget -qO - https://pkgs-ce.cossacklabs.com/gpg | sudo apt-key add -
      #     sudo apt install apt-transport-https
      #     sudo sh -c 'echo "deb https://pkgs-ce.cossacklabs.com/stable/ubuntu focal main" >  /etc/apt/sources.list.d/themis.list'
      #     sudo apt update
      #     sudo apt install libthemis-dev

      # Add ssh connection
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      - name: start test
        run: |
          ./test.sh ./tests/...
