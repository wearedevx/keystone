name: Build CLI tools

on:
  repository_dispatch:
    types: [build-cli]

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  KSAPI_URL: ${{ github.event.client_payload.url }}
  AUTH_PROXY: https://europe-west6-${{ secrets.PROJECT_ID }}.cloudfunctions.net/auth-proxy/
  REF: ${{ github.event.client_payload.ref }}
  TAG: ${{ github.event.client_payload.tag }}

jobs:
  snapcraft:
    runs-on: ubuntu-20.04
    steps:
      - name: Print Inputs
        run: echo "${{ toJSON(github.event.client_payload) }}"

      - name: Load Secrets
        uses: wearedevx/keystone-action
        id: load_secrets
        with:
          token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}
          keystone_slot_1: ${{ secrets.KEYSTONE_PROD_SLOT_1 }}
          keystone_slot_2: ${{ secrets.KEYSTONE_PROD_SLOT_2 }}
          keystone_slot_3: ${{ secrets.KEYSTONE_PROD_SLOT_3 }}
          keystone_slot_4: ${{ secrets.KEYSTONE_PROD_SLOT_4 }}
          keystone_slot_5: ${{ secrets.KEYSTONE_PROD_SLOT_5 }}

      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: ${{ env.REF }}

      - name: Setup Working Directory (Develop)
        run: |
          cd cli
          mkdir snap

          sh deploy/gen_snapcraft.sh
        env:
          BRANCH: ${{ env.TAG }}
          #
          KSAPI_URL: ${{ env.KSAPI_URL }}
          AUTH_PROXY: ${{ env.AUTH_PROXY }}
          #
          VERSION: ${{ env.TAG }}

      - name: Install Snapcraft dependencies
        run: |
          sudo apt install libvshadow-utils pkg-config

      - name: Snapcraft Build
        uses: snapcore/action-build@v1.0.8
        id: snapcraft
        with:
          path: cli/

      - name: Snapcraft Package
        run: |
          unsquashfs ${{ steps.snapcraft.outputs.snap }}
          snapcraft pack ./squashfs-root -o  ${{ steps.snapcraft.outputs.snap }}

      - name: Upload Snap Artifact
        uses: actions/upload-artifact@v2
        with:
          name: ks-snap
          path: ${{ steps.snapcraft.outputs.snap }}

      - name: Snapcraft Release Type
        id: release_type
        env:
          BRANCH: ${{ env.TAG }}
        run: |-
          if [ $BRANCH == 'develop' ]; then
            echo "::set-output name=release_type::edge"
          else
            echo "::set-output name=release_type::stable"
          fi

      - name: Snapcraft Publish Edge
        uses: snapcore/action-publish@v1
        with:
          store_login: ${{ secrets.STORE_LOGIN }}
          snap: ${{ steps.snapcraft.outputs.snap }}
          release: ${{ steps.release_type.outputs.release_type }}

  homebrew:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          repository: wearedevx/homebrew-keystone
          token: ${{ secrets.DEPLOY_GITHUB_TOKEN }}

      - name: Run Template
        env:
          BRANCH: ${{ env.TAG }}
          #
          KSAPI_URL: ${{ env.KSAPI_URL }}
          AUTH_PROXY: ${{ env.AUTH_PROXY }}
          #
          VERSION: ${{ env.TAG }}
          GITHUB_CLIENT_ID: ${{ secrets.GH_CLIENT_ID_DEV }}
          GITHUB_CLIENT_SECRET: ${{ secrets.GH_CLIENT_SECRET_DEV }}
          GITLAB_CLIENT_ID: ${{ secrets.GL_CLIENT_ID }}
          GITLAB_CLIENT_SECRET: ${{ secrets.GL_CLIENT_SECRET }}
        run: ./run_release.sh

      - name: Push
        uses: EndBug/add-and-commit@v7
        with:
          add: "."
          branch: main
          default_author: github_actions
          message: release ${{ env.TAG }}
